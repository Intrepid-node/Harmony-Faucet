{"version":3,"sources":["components/logos/faucet.png","components/LoadButton/index.js","components/AppExplanations/index.js","components/controller/accountManager.js","components/controller/faucet.js","components/ConfigParticles/particlesConfig.js","components/logos/intrepidlogo.png","components/logos/discordlogo.png","components/logos/harmonylogo.png","App.js","reportWebVitals.js","index.js"],"names":["LoadButton","text","loadingText","color","disabled","hidden","onClick","useState","isLoading","setLoading","onTriggerRun","useCallback","then","className","style","backgroundColor","display","AppExplanations","expandedItems","setexpandedItems","allowZeroExpanded","allowMultipleExpanded","onChange","update","length","newExpandedItemUUID","itemButtonBottom","document","getElementById","getBoundingClientRect","bottom","window","innerHeight","scrollBy","children","contract_abi","require","AccountManager","this","connected","busy","web3Provider","web3","balance","distributorBalance","smartContractBalance","harmonySupplyContract","network","a","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","web3Modal","Web3Modal","cacheProvider","connect","request","method","params","account","console","error","Web3","eth","net","getId","log","decimals","balance_BN","utils","toBN","decimals_BN","before_comma","div","toString","after_comma","mod","padStart","formatted","String","getBalance","formatted_balance","getFormattedBalance","Contract","loadContractIfNeeded","methods","call","numberOfDonationsRemaining","getday","totalDonationsPerDay","captcha","apiUrl","config","get","data","JSON","stringify","address","axios","post","headers","Accept","crossDomain","response","claimFaucet","particlesConfig","fps_limit","interactivity","detect_on","events","onclick","enable","mode","onhover","parallax","force","smooth","resize","modes","push","quantity","attract","distance","duration","factor","particles","value","line_linked","opacity","width","move","rotateX","rotateY","bounce","direction","out_mode","random","speed","straight","number","density","value_area","anim","opacity_min","sync","shape","character","fill","font","weight","image","height","replace_color","src","polygon","nb_sides","stroke","type","size","size_min","draw","lineColor","lineWidth","radius","scale","url","retina_detect","set","configuration","accountManager","App","setAccount","setBalance","remainingDonations","setRemainingDonations","givenDonationsToday","setGivenDonationsToday","setDistributorBalance","contractBalance","setContractBalance","txLink","setTxLink","setCaptcha","position","hideProgressBar","logo","alt","getNumberOfDonationsRemaining","donations","getNumberOfDonationsToday","getContractBalance","getDistributorBalance","toast","Number","faucetClaim","statusCode","success","hash","parse","body","errorMessage","catch","err","message","id","action","theme","sitekey","onVerify","token","ekey","target","rel","href","dietbald","intrepid","harmony","h","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.86f513a5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/faucet.287eb911.png\";","import React, { useState, useCallback } from \"react\";\nimport \"./index.css\";\n\nfunction LoadButton({ text, loadingText, color, disabled, hidden, onClick }) {\n  const [isLoading, setLoading] = useState(false);\n\n  const onTriggerRun = useCallback(() => {\n    setLoading(true);\n    onClick().then(() => {\n      setLoading(false);\n    });\n  }, [onClick]);\n\n  return (\n    <button\n      className=\"BackupButton\"\n      disabled={isLoading | disabled}\n      onClick={isLoading ? null : onTriggerRun}\n      style={{\n        backgroundColor: color,\n        display: hidden ? \"none\" : true,\n      }}\n    >\n      {isLoading ? loadingText || \"Loading…\" : text}\n    </button>\n  );\n}\n\nexport default LoadButton;\n","import React, { useState } from \"react\";\n\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemHeading,\n  AccordionItemButton,\n  AccordionItemPanel,\n} from \"react-accessible-accordion\";\nimport ReactMarkdown from \"react-markdown\";\nimport \"./index.css\";\n\nexport default function AppExplanations() {\n  const [expandedItems, setexpandedItems] = useState([]);\n\n  // In case the user expands a node that is barely visible, we scroll the page to display it fully\n  function handleExpand(update) {\n    if (update.length > expandedItems.length) {\n      const newExpandedItemUUID = update[update.length - 1];\n      const itemButtonBottom = document\n        .getElementById(`accordion__panel-${newExpandedItemUUID}`)\n        .getBoundingClientRect().bottom;\n      if (itemButtonBottom > window.innerHeight) {\n        window.scrollBy(0, itemButtonBottom - window.innerHeight);\n      }\n    }\n    setexpandedItems(update);\n  }\n\n  const whatIsAFaucet_help =\n    // eslint-disable-next-line\n    \"A `Faucet` is a tool that provides a small amount of funds to start using a cryptocurrency without having to buy some. You will need gas (small amount of coin) \\n\\\n     in order to make transactions or to collect your staking rewards! Use this faucet by simply filling out the captcha and connecting. \\n\\\n     Always be cautious of other faucets as most contain many ads or spam and can sometimes be unsafe! \\n\\\n    This is a bare-bones, no BS faucet, but most importantly is that it's safe!\";\n    ;\n    \n\n\n  const howMuchCanIGet_help =\n    // eslint-disable-next-line\n    \"`Plenty enough!`  \\n\\\n    Since transactions on the Harmony network are VERY cheap. Harmony Faucet will only send you `0.01 ONE`, which should be enough to \\n\\\n    do `100` basic transactions on Harmony network. You can use Harmony Faucet up to `3 times a day`. \\n\\\n    You will get a 'Balance too High' message if you already have sufficent gas in your wallet. \\n\\\n    Feel free to send some spare ONEs to `0xf31822e40957fd71c102a112b53ccc2a4d4a7ec7` in order to replenish the faucet once you're rich.\";\n\n  const howToEarnMoreMatic_help =\n  \"* First bring your assets from Ethereum to Harmony through [the bridge](https://bridge.harmony.one/)  \\n\\\n  Then there's a variety of things you can do:  \\n\\\n  * Play [CryptoRoyale](https://cryptoroyale.one/) to earn the ROY token which can be swapped on [Viperswap](https://viper.exchange/) for ONE \\n\\\n  * Swap to other assets on [Sushiswap](https://app.sushi.com/swap), the equivalents of `Uniswap` on Harmony  \\n\\\n  [Openswap](https://app.openswap.one/) is also available and will route your swaps through the cheapest path.  \\n\\\n  * Depositing your assets on [Tranquil](https://app.tranquil.finance/) or [Curve](https://harmony.curve.fi/) to farm some fresh ONE  \\n\\\n  * Enjoy the same functionalities Ethereum has, only with less friction \\n\\\n  \";\n\n  const staking =\n  \"* `Stake` your ONEs on the Harmony blockchain and earn almost 10% APR on your coins. \\n\\\n    Staking helps decentralize and grow Harmony's Blockchain! In order to stake you need a compatible wallet with at least 100 ONEs in it. \\n\\\n    Go to `https://staking.harmony.one/validators/mainnet` and select a validator on the list to begin staking! \\n\\\n    We reccommend staking with `Intrepid.one | Community Validator` as their commission fees help fund the Harmony Faucet!\";\n  return (\n    <Accordion allowZeroExpanded allowMultipleExpanded onChange={handleExpand}>\n       <AccordionItem>\n        <AccordionItemHeading>\n          <AccordionItemButton>What is a Faucet ?</AccordionItemButton>\n        </AccordionItemHeading>\n        <AccordionItemPanel>\n          <ReactMarkdown\n            className=\"Explanations\"\n            children={whatIsAFaucet_help}\n          ></ReactMarkdown>\n        </AccordionItemPanel>\n      </AccordionItem>\n      <AccordionItem>\n        <AccordionItemHeading>\n          <AccordionItemButton>How much can I get ?</AccordionItemButton>\n        </AccordionItemHeading>\n        <AccordionItemPanel>\n          <ReactMarkdown\n            className=\"Explanations\"\n            children={howMuchCanIGet_help}\n          ></ReactMarkdown>\n        </AccordionItemPanel>\n      </AccordionItem>\n      <AccordionItem>\n        <AccordionItemHeading>\n          <AccordionItemButton>\n            How to earn more ONE ?\n          </AccordionItemButton>\n        </AccordionItemHeading>\n        <AccordionItemPanel>\n          <ReactMarkdown\n            className=\"Explanations\"\n            children={howToEarnMoreMatic_help}\n          ></ReactMarkdown>\n        </AccordionItemPanel>\n      </AccordionItem>\n      <AccordionItem>\n        <AccordionItemHeading>\n          <AccordionItemButton>Earn more with staking !</AccordionItemButton>\n        </AccordionItemHeading>\n        <AccordionItemPanel>\n          <ReactMarkdown\n            className=\"Explanations\"\n            children={staking}\n          ></ReactMarkdown>\n        </AccordionItemPanel>\n      </AccordionItem>\n    </Accordion>\n  );\n}\n","import Web3 from \"web3\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nconst contract_abi = require(\"./ABI.json\");\n\nconst HARMONY_MAIN_NETWORK = 1666600000;\nconst HARMONY_TEST_NETWORK = 1666700000;\n\nclass AccountManager {\n  constructor() {\n    this.connected = false;\n    this.busy = false;\n    this.web3Provider = null;\n    this.web3 = null;\n    this.balance = 0;\n    this.distributorBalance = 0;\n    this.smartContractBalance = 0;\n    this.harmonySupplyContract = null;\n\n    this.network = 0;\n  }\n\n  async connect() {\n    if (!this.connected) {\n      const providerOptions = {\n        walletconnect: {\n          package: WalletConnectProvider, // required\n          options: {\n            infuraId: \"https://api.harmony.one\", // required\n          },\n        },\n      };\n\n      const web3Modal = new Web3Modal({\n        network: \"mainnet\", // optional\n        cacheProvider: true, // optional\n        providerOptions, // required\n      });\n\n      this.web3Provider = await web3Modal.connect();\n      try {\n        // Request account access\n        this.account = await this.web3Provider.request({\n          method: \"eth_requestAccounts\",\n          params: [],\n        });\n      } catch (error) {\n        // User denied account access...\n        console.error(`User denied account access: ${error}`);\n      }\n      this.web3 = new Web3(this.web3Provider);\n      this.network = await this.web3.eth.net.getId();\n      console.log(this.network);\n      if (\n        this.network === HARMONY_MAIN_NETWORK ||\n        this.network === HARMONY_TEST_NETWORK\n      ) {\n        this.connected = true;\n        console.log(`connected: ${this.account} ${typeof this.account}`);\n        return this.account;\n      }\n    }\n  }\n\n  getFormattedBalance(balance, decimals) {\n    if (!balance) return \"\";\n    let balance_BN = this.web3.utils.toBN(balance);\n    let decimals_BN = this.web3.utils.toBN(10 ** decimals);\n    let before_comma = balance_BN.div(decimals_BN).toString();\n    let after_comma = balance_BN.mod(decimals_BN).toString();\n    after_comma = after_comma.padStart(decimals, \"0\");\n    return before_comma + \".\" + after_comma + \" ONE\";\n  }\n\n  async getBalance(formatted = true) {\n    const decimals = 18;\n    console.log(\"address\", String(this.account));\n    this.balance = await this.web3.eth.getBalance(String(this.account));\n    this.formatted_balance = this.getFormattedBalance(this.balance, decimals);\n    return formatted ? this.formatted_balance : this.balance;\n  }\n\n  async getDistributorBalance() {\n    this.distributorBalance = await this.web3.eth.getBalance(\n      \"0xa5e299b65e6ffbc1768c4b489aecefc99111e737\"\n    );\n    return this.distributorBalance;\n  }\n\n  loadContractIfNeeded() {\n    if (!this.harmonySupplyContract) {\n      this.harmonySupplyContract = new this.web3.eth.Contract(\n        contract_abi,\n        \"0xf31822e40957fd71c102a112b53ccc2a4d4a7ec7\"\n      );\n    }\n  }\n\n  async getContractBalance() {\n    this.loadContractIfNeeded();\n\n    return await this.harmonySupplyContract.methods.getBalance().call();\n\n    //return await this.web3.eth.getBalance(this.harmonySupplyContract.address);\n  }\n\n  async getNumberOfDonationsRemaining() {\n    this.loadContractIfNeeded();\n    return await this.harmonySupplyContract.methods\n      .numberOfDonationsRemaining()\n      .call();\n  }\n  async getNumberOfDonationsToday() {\n    this.loadContractIfNeeded();\n    return await this.harmonySupplyContract.methods\n      .totalDonationsPerDay(\n        await this.harmonySupplyContract.methods.getday().call()\n      )\n      .call();\n  }\n}\n\nexport default AccountManager;\n","import axios from \"axios\";\nimport config from \"react-global-configuration\";\n\nasync function claimFaucet(account, captcha) {\n  console.log(captcha);\n  let apiUrl = config.get(\"apiurl\");\n  console.log(\"Sending request...\", apiUrl);\n\n  var data = JSON.stringify({ address: account[0], captcha: captcha });\n\n  return await axios\n    .post(apiUrl, data, {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      crossDomain: true,\n    })\n    .then((response) => {\n        return response;\n     /* if (response.status === 200) {\n        return config.get(\"explorer\") + \"/tx/\" + response.data.hash;\n      }*/\n    });\n}\n\nexport default claimFaucet;\n","const particlesConfig = {\n  \n  fps_limit: 60,\n  \"fullScreen\": {\n    \"enable\": true,\n    \"zIndex\": -1\n  },\n  interactivity: {\n    detect_on: \"window\",\n  \n    events: {\n      onclick: { enable: true, mode: \"push\" },\n      onhover: {\n        enable: true,\n        mode: \"attract\",\n        parallax: { enable: false, force: 60, smooth: 10 }\n      },\n      resize: true\n    },\n    modes: {\n      push: { quantity: 4 },\n      attract: { distance: 150, duration: 0.4, factor: 3 }\n    }\n  },\n  particles: {\n    color: { value: \"#ffffff\" },\n    line_linked: {\n      color: \"#ffffff\",\n      distance: 150,\n      enable: true,\n      opacity: 0.4,\n      width: 1\n    },\n    move: {\n      attract: { enable: false, rotateX: 600, rotateY: 1200 },\n      bounce: false,\n      direction: \"none\",\n      enable: true,\n      out_mode: \"out\",\n      random: false,\n      speed: 2,\n      straight: false\n    },\n    number: { density: { enable: true, value_area: 800 }, value: 70 },\n    opacity: {\n      anim: { enable: false, opacity_min: 0.1, speed: 1, sync: false },\n      random: false,\n      value: 0.5\n    },\n    shape: {\n      character: {\n        fill: false,\n        font: \"Verdana\",\n        style: \"\",\n        value: \"*\",\n        weight: \"400\"\n      },\n      image: {\n        height: 100,\n        replace_color: true,\n        src: \"images/github.svg\",\n        width: 100\n      },\n      polygon: { nb_sides: 5 },\n      stroke: { color: \"#000000\", width: 0 },\n      type: \"circle\"\n    },\n    size: {\n      anim: { enable: false, size_min: 0.1, speed: 40, sync: false },\n      random: true,\n      value: 5\n    }\n  },\n  polygon: {\n    draw: { enable: false, lineColor: \"#ffffff\", lineWidth: 0.5 },\n    move: { radius: 10 },\n    scale: 1,\n    type: \"none\",\n    url: \"\"\n  },\n  retina_detect: true\n}\n  \n  export default particlesConfig;\n","export default __webpack_public_path__ + \"static/media/intrepidlogo.fb90d741.png\";","export default __webpack_public_path__ + \"static/media/discordlogo.bee048d4.png\";","export default __webpack_public_path__ + \"static/media/harmonylogo.c0501fe3.png\";","import logo from \"./components/logos/faucet.png\";\nimport \"./App.css\";\nimport LoadButton from \"./components/LoadButton\";\nimport AppExplanations from \"./components/AppExplanations\";\nimport AccountManager from \"./components/controller/accountManager\";\nimport faucetClaim from \"./components/controller/faucet\";\nimport React, { useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport config from \"react-global-configuration\";\nimport configuration from \"./config.json\";\nimport HCaptcha from \"@hcaptcha/react-hcaptcha\";\nimport Particles from \"react-tsparticles\";\nimport particlesConfig from './components/ConfigParticles/particlesConfig';\nimport intrepid from \"./components/logos/intrepidlogo.png\";\nimport dietbald from \"./components/logos/discordlogo.png\";\nimport harmony from \"./components/logos/harmonylogo.png\";\n\n\n\n\n\nconfig.set(configuration);\n\nconst accountManager = new AccountManager();\n\nfunction App() {\n  const [account, setAccount] = useState(\"Not connected\");\n  const [balance, setBalance] = useState(0);\n  const [remainingDonations, setRemainingDonations] = useState(0);\n  const [givenDonationsToday, setGivenDonationsToday] = useState(0);\n\n  const [distributorBalance, setDistributorBalance] = useState(0);\n  const [contractBalance, setContractBalance] = useState(0);\n\n  const [txLink, setTxLink] = useState(\"\");\n  const [captcha, setCaptcha] = useState(\"\");\n\n\n\n  return (\n    <div className=\"App\">\n      <div style={{ position: 'absolute'}}>\n        <Particles \n        params={particlesConfig} />\n      </div>\n      <ToastContainer hideProgressBar={true} />\n      <header className=\"App-header\">\n      <div className=\"App-banner\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      </div>\n        <div className=\"Commands\">\n          <LoadButton\n            text=\"Connect\"\n            loadingText=\"Loading...\"\n            color=\"#00AEE9\"\n            hidden={account !== \"Not connected\"}\n            onClick={() =>\n              accountManager.connect().then((account) => {\n                if (!account) {\n                  toast.error(\n                    `Wrong network: Please select ONE/Harmony network first.`\n                  );\n                } else {\n                  setAccount(account);\n                  accountManager.getBalance(false).then((balance) => {\n                    setBalance(balance);\n                  });\n                  accountManager\n                    .getNumberOfDonationsRemaining()\n                    .then((donations) => {\n                      setRemainingDonations(donations);\n                    });\n\n                  accountManager\n                    .getNumberOfDonationsToday()\n                    .then((donations) => {\n                      setGivenDonationsToday(donations);\n                    });\n\n                  accountManager.getContractBalance().then((balance) => {\n                    setContractBalance(balance);\n                  });\n                  accountManager.getDistributorBalance().then((balance) => {\n                    setDistributorBalance(balance);\n                  });\n                }\n              })\n            }\n          />\n          <LoadButton\n            text={\n              Number(balance) >= config.get(\"maxAmount\")\n                ? \"High Balance\"\n                : remainingDonations < 1\n                ? \"No donations left\"\n                : \"Receive\"\n            }\n            loadingText=\"Sending...\"\n            color=\"#00AEE9\"\n            disabled={\n              Number(balance) >= config.get(\"maxAmount\") || captcha === \"\"\n            }\n            hidden={account === \"Not connected\"}\n            onClick={() =>\n              faucetClaim(account, captcha)\n                .then((response) => {\n                  console.log(response);\n                  if (response.data.statusCode === 200) {\n                    toast.success(\"Transaction sent!\");\n                    setTxLink(response.data.hash);\n                    accountManager.getBalance(false).then((balance) => {\n                      setBalance(balance);\n                    });\n\n                    setCaptcha(\"\");\n                  } else {\n                    toast.error(\n                      \"Transaction failed!\" +\n                        JSON.parse(response.data.body).errorMessage\n                    );\n                  }\n                })\n                .catch((error) => {\n                  toast.error(`${error.response.data.err.message} 🙅`);\n                })\n            }\n          />\n        </div>\n        <form id=\"receive\" action=\"\" method=\"POST\">\n          <HCaptcha\n            theme=\"dark\"\n            sitekey={config.get(\"hcaptchasitekey\")}\n            onVerify={(token, ekey) => {\n              setCaptcha(token);\n            }}\n          />\n        </form>\n\n        <p hidden={account === \"Not connected\"}>\n          {\"Your Wallet : \" + account}\n        </p>\n        <p hidden={account === \"Not connected\"}>\n          {\"Your balance: \" +\n            String(accountManager.getFormattedBalance(balance, 18))}\n        </p>\n        <p hidden={account === \"Not connected\"}>\n          {\"There are \" +\n            String(remainingDonations) +\n            \" donations left for today.\"}\n          {remainingDonations < 1\n            ? \", try again tomorrow or ask for community donations\"\n            : \"\"}\n        </p>\n\n        <p hidden={account === \"Not connected\"}>\n          {\"Today's total Faucet withdrawal: \" +\n            String(accountManager.getFormattedBalance(givenDonationsToday, 18))}\n        </p>\n\n        <a\n          hidden={txLink === \"\"}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href={txLink}\n        >\n          {txLink}\n        </a>\n        <br/>\n        <AppExplanations></AppExplanations>\n        <div className=\"App-footer\">\n           \n           <div>\n           \n           <a\n            href=\"https://discord.gg/aKbzKZ2wb8\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\">\n              <img src={dietbald} className=\"discordLogo\" alt=\"logo\"/>\n            </a>\n\n\n             <a\n            href=\"https://staking.harmony.one/validators/mainnet/one1rfzf38ymc447qhmgrhcglewctl5nj9u6q6syjk\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\">\n              <img src={intrepid} className=\"intrepidLogo\" alt=\"logo\"/>\n             </a>\n\n\n            <a\n            href=\"https://www.harmony.one/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\">\n              <img src={harmony} className=\"harmonyLogo\" alt=\"logo\"/>\n            </a>\n           </div>\n           <p>\n            A modest Web App built by{\" \"}\n            <a\n              href=\"https://github.com/dietbald\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Dietbald \n            </a>{\" \"}\n            with React, hosted on Github.{\" \"}\n          </p>\n          <p>\n            Faucet sponsored by:{\" \"}\n            <a\n              h\n              href=\"https://www.intrepidstaking.io/\"\n              target=\"_blanc\"\n              rel=\"noopener noreferrer\"\n            >\n               Intrepid.one | Community Validator.\n            </a>\n          </p>\n\n          <p hidden={account === \"Not connected\"}>\n            {\"Faucet balance: \" +\n              String(accountManager.getFormattedBalance(contractBalance, 18))}\n          </p>\n\n          <p hidden={account === \"Not connected\"}>\n            {\"Distributor balance: \" +\n              String(\n                accountManager.getFormattedBalance(distributorBalance, 18)\n              )}\n          </p>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}